package MyPackage;

public interface Stack {
	void push(int i);
	int pop();

}

package MyPackage;

public class FixedStack implements Stack{
	int stck[];
	int top;
	FixedStack(int size){
		size=9;
		stck=new int[size];
		top=-1;
	}
	public void push(int i){
		if(top==stck.length-1)
			System.out.println("Warning! Stack is Overflow");
		else
			stck[++top]=i;
}

public int pop() {
	if(top<0){
		System.out.println("Stack underflow");
	return 0;
	}
	else
		return stck[top--];
}
}

package MyPackage;

public class VariableStack implements Stack{
	int stck[];
	int top;
	VariableStack(int size){
		stck=new int[size];
		top=-1;
	}
	public void push(int i){
		if(top==stck.length-1)
			System.out.println("Warning! Stack is Overflow");
		else
			stck[++top]=i;
}

public int pop() {
	if(top<0){
		System.out.println("Stack underflow");
	return 0;
	}
	else
		return stck[top--];
}
}

package MyPackage;

public class test {

	public static void main(String[] args) {
		System.out.println("Fixed Stack Implementation");
		FixedStack fs = new FixedStack(10);
		for (int i = 0; i < 10; i++)
			fs.push(i);

		System.out.println("Variable Stack Implementation");
		VariableStack mystack1 = new VariableStack(5);
		for (int i = 0; i < 5; i++)
			mystack1.push(i);
		System.out.println("Stack Elements");
		for (int i = 0; i < 5; i++)
			System.out.println(mystack1.pop());
	}

}

